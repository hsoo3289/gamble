<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="team3.gamble.mybatis.board">

	<resultMap id="boardResult" type="Board">
		<result property="seq" column="SEQ" />
		<result property="subject" column="SUBJECT" />
		<result property="content" column="CONTENT" />
		<result property="writer_seq" column="WRITER_SEQ" />
		<result property="view_conunt" column="VIEW_COUNT" />
		<result property="like_conunt" column="LIKE_COUNT" />
		<result property="cdate" column="CDATE" />
		<result property="rdate" column="RDATE" />
		<result property="parent_seq" column="PARENT_SEQ" />

	</resultMap>

	<select id="paginglist" resultType="hashmap" parameterType="Page">
		<choose>
			<when test="searchMode">
				select * from
				(select rownum as rn, ${dbName}_VIEW.* from ${dbName}_VIEW where ${col} like #{keyWord})
				where rn between #{begin} and #{end}
				
			</when>
			<otherwise>
				select * from ${dbName}_VIEW
				where ROWNUMBER between #{begin} and #{end}

			</otherwise>
		</choose>
	</select>

	<select id="pagingcount" resultType="int" parameterType="Page">
		<choose>
			<when test="searchMode">
				select count(*) from ${dbName} where ${col} like
				#{keyWord}
			</when>
			<otherwise>
				select count(*) from ${dbName}
			</otherwise>
		</choose>
	</select>

	<select id="list" resultType="hashmap" parameterType="hashmap">
		select *
		from ${dbName}_VIEW
	</select>

	<select id="item" resultType="hashmap">
		select * from ${dbName}_VIEW
		where
		SEQ=#{seq}
	</select>

	<select id="get_view_count" resultType="int" parameterType="hashmap">
		select VIEW_COUNT from ${dbName} where SEQ=#{seq}
	</select>

	<update id="view_count" parameterType="hashmap">
		update ${dbName} set
		view_count=view_count+1 where SEQ=#{seq}
	</update>

	<select id="get_like_count" resultType="int" parameterType="hashmap">
		select LIKE_COUNT from ${dbName} where SEQ=#{seq}
	</select>

	<update id="like_count" parameterType="hashmap">
		update ${dbName} set
		LIKE_COUNT=LIKE_COUNT+1 where SEQ=#{seq}
	</update>


	<select id="nextseq" resultType="long">
		select
		${dbName}_SEQ.NEXTVAL from
		DUAL
	</select>

	<insert id="insert" parameterType="hashmap">
		insert into ${dbName}(SEQ, SUBJECT, CONTENT, WRITER_SEQ
		<if test="parent_seq neq null and parent_seq neq -1">,PARENT_SEQ</if>
		)
		values(#{seq}, #{subject}, #{content}, #{writer_seq}
		<if test="parent_seq neq null and parent_seq neq -1">,#{parent_seq}</if>
		)
	</insert>

	<update id="update" parameterType="hashmap">
		update
		${dbName}
		set
		SUBJECT=#{subject}, CONTENT=#{content}, RDATE=SYSDATE
		where SEQ=#{seq}
	</update>

	<delete id="delete" parameterType="hashmap">
		delete from ${dbName}
		where
		SEQ= #{seq}
	</delete>

</mapper>
	
	
